install aws-cli,kubectl,eksctl,helm


snap install aws-cli --classic

snap install kubectl --classic

snap install helm --classic
------------------------------------------------------------------------------------------------------------------------------------

# for ARM systems, set ARCH to: `arm64`, `armv6` or `armv7`
ARCH=amd64
PLATFORM=$(uname -s)_$ARCH

curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"

# (Optional) Verify checksum
curl -sL "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check

tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz

sudo mv /tmp/eksctl /usr/local/bin

-----------------------------------------------------------------------------------------------------------------------

eksctl create cluster --name=observability --region=eu-north-1 --zones=eu-north-1a,eu-north-1b --without-nodegroup

eksctl utils associate-iam-oidc-provider --region eu-north-1 --cluster observability --approve

eksctl create nodegroup --cluster=observability \
                        --region=eu-north-1 \
                        --name=observability-ng-private \
                        --node-type=t3.medium \
                        --nodes-min=2 \
                        --nodes-max=3 \
                        --node-volume-size=20 \
                        --managed \
                        --asg-access \
                        --external-dns-access \
                        --full-ecr-access \
                        --appmesh-access \
                        --alb-ingress-access \
                        --node-private-networking

aws eks update-kubeconfig --name observability

helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

helm repo update

helm install monitoring prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace

kubectl --namespace monitoring get pods -l "release=monitoring"

kubectl get pods -n monitoring

kubectl get secret -n monitoring monitoring-grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo

kubectl port-forward -n monitoring svc/monitoring-grafana 3000:80

kubectl edit svc -n monitoring monitoring-grafana

kubectl get svc -n monitoring monitoring-grafana

kubectl port-forward -n monitoring svc/monitoring-kube-prometheus-prometheus 9090

kubectl edit svc -n monitoring monitoring-kube-prometheus-prometheus

kubectl get svc -n monitoring monitoring-kube-prometheus-prometheus

kubectl get pods -n kube-system

eksctl delete cluster --name magneq1

prom-operator


